Sedhead is just a header file i like to use in my programs. It covers various
functionalities via #defines.

Not everything in this header is of the same standard. For example, 
the free_all(...) macro is very C99 heavy. 
(variable length macros, and a couple compound literals)

All my code is documented via comments aswell.

#define __SED_HEAD__    #include "err_handle/err_handle.h"

#define __SED_NUM__     #include "get_num/get_num.h"

#define __SED_LINUX__   <sys/stat.h>, <unistd.h>, <fcntl.h>

/* floating point macros. 
   Variouse floating point numbers are defined in header */
set_float(num, set);
set_double(num, set);
set_nan(num, set);
set_inf(num, set);

/* includes boolean used enum. */
typedef enum {false,true} Bool

/* min/max */
min(m,n);
max(m,n);


/* clears the input buffer using variable char ch; and getchar (). */
#define clear_buff(ch);

/* get a line of input from a buffer, clears the buffer if required */
#define getLineInput(input, max, fpntr, len);


/* create a bit mask for a given range of bits. start, end. (lsb,msb) */
#define create_mask(increment, start, end, resMask);

/* adds all the ascii values in a character array together */
#define sumChars(increment, array, size, res);

/* vectorizes a function funct, its C99 as fuck tho.
   -Type is the type of pointer used. (VA_ARGS could be void for example.). 
   -... is a variable argument list.
   -will execute every argument into the function.
   -funct only takes in one argument. */
#define apply_funct(type, funct, ...);

/* apply free to every pointer given in the argument list using the
   apply_funct macro */
#define free_all(...); /* ... is a variable argument list of pointers */
